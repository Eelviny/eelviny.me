<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eelviny</title>
  <icon>https://eelviny.me/assets/images/icon64.png</icon>
  <link href="https://eelviny.me/"/>
  <link type="application/atom+xml" rel="self" href="https://eelviny.me/feed.xml" />
  <updated>2016-10-08T15:59:28+01:00</updated>
  <id>eelviny</id>
  <author>
    <name>Elvin Luff</name>
    <email>elvinluff@gmail.com</email>
  </author>
  <rights>© 2016 Elvin Luff</rights>
  
    <entry>
      <title>Decentralising Files</title>
      <link href="https://eelviny.me/blog/2016/decentralising-files/" />
      <updated>2016-09-28T00:00:00+01:00</updated>
      <id>decentralising-files</id>
      <summary>With school over and a gap year ahead of me, I started to get a little bored. Working at a retail store isn’t fun, but messing around with the next generation of web technologies certainly is!

</summary>
      <content type="html">&lt;p&gt;With school over and a gap year ahead of me, I started to get a little bored. Working at a retail store isn’t fun, but messing around with the next generation of web technologies certainly is!&lt;/p&gt;

&lt;p&gt;A while ago, like the nerd I am, I started dreaming of ways that would make internet a little bit faster. Why couldn’t ISPs just cache the important, static stuff instead of fetching it from a different network on a peering agreement each time?
The answer to this is SSL. Since each connection is encrypted end-to-end, with a different key for each connection, nothing can be cached like that. Instead, ISPs and all other networks have to fetch it from the main source each time.&lt;/p&gt;

&lt;h3 id=&quot;enter-ipfs&quot;&gt;Enter &lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt;.&lt;/h3&gt;
&lt;p&gt;It’s been great fun to mess around with it. While many other technologies focus on giving an all-in-one package for persistent, decentralised storage solutions, &lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt; does none of that. Instead, it offers to be a direct, (kinda) drop-in replacement for &lt;abbr title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/abbr&gt;, which allows for anyone, anywhere to cache and share content. &lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt; stands simply for InterPlanetary File System, and it does exactly that. All a computer needs is connection to one other peer in the network, and it allows them to connect to everyone else using &lt;abbr title=&quot;Distributed Hash Table&quot;&gt;DHT&lt;/abbr&gt; - the same technology as Bittorrent, but on a much larger scale.&lt;/p&gt;

&lt;h4 id=&quot;great-so-what-does-this-actually-do-for-me&quot;&gt;Great, so what does this actually do for me?&lt;/h4&gt;
&lt;p&gt;Good that you asked! Imagine you’re on some obscure website, on the 5th page of Google, looking for an answer to that one really obscure computer problem you have. (Alright, nobody gets to the 5th page, but bear with me) You try to load up that webpage but you find that part of the website has gone offline! All the pictures were hosted on some even more obscure image hosting site that went offline a week ago.&lt;/p&gt;

&lt;p&gt;But imagine that some other guy loaded up the same site a month ago. With &lt;abbr title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/abbr&gt;, that means nothing. With &lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt;, this guy has just become your saviour. You go to question the &lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt; network for those pictures, and this guy’s computer responds, pushing the pictures across the internet to you, and voila, your problems are solved.&lt;/p&gt;

&lt;h4 id=&quot;that-just-sounds-like-a-grand-scheme-to-get-viruses&quot;&gt;That just sounds like a grand scheme to get viruses…&lt;/h4&gt;
&lt;p&gt;How wrong you are. &lt;abbr title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/abbr&gt; only ever sends you to the location of some data. Imagine if the hoster of this content then decides to subtely change it… There’s nothing you can do. Our version of the internet merely provides addresses to the location of content, but gives no way to address the content itself. If this were the case of &lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt;, then yes, the “guy” could in theory just push a virus across to you.&lt;/p&gt;

&lt;p&gt;But &lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt; doesn’t work like that. When a file is added to the network, a hash is created. This hash becomes the address of the file, and changing the file means the hash would also change. The sender sends you some data, and you check that the hash of the file matches up to the address that you asked for. If the two match up, you’ve got the exact file that you asked for. This allows for anyone, anywhere to become not only consumers of content, but also hosters, and nobody has to trust each other. You’re asking for the data itself, and if the wrong data is sent, then it is simply rejected.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is an example of an address. This is a hash of &lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt;’s readme file, and this is what is used to find the file you need. Here’s the steps undertaken:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Connect to a peer in the network. Using &lt;abbr title=&quot;Distributed Hash Table&quot;&gt;DHT&lt;/abbr&gt;, find more peers in the network.&lt;/li&gt;
  &lt;li&gt;Ask the network for this hash, and find the closest peer with this file.&lt;/li&gt;
  &lt;li&gt;Download the data from this peer.&lt;/li&gt;
  &lt;li&gt;Create a hash from this data. If the hash matches the one we were asking for, then everything is great! Otherwise, reject the data.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;accepting-limitations&quot;&gt;Accepting Limitations&lt;/h3&gt;
&lt;p&gt;This system allows for any machine, anywhere, to request files from any other machine, regardless of whether the original uploader is still hosting the file. This means that the more popular a file is, the more available it is to other peers. However, it does not solve the problem of availability completely. If nobody wants a file, then nobody will store it on their machine… and then it’s gone, forever. However, if there is a website that you treasure, you can always preserve it in its original form, by simply keeping a copy!&lt;/p&gt;

&lt;p&gt;The next thing to remember is that, just like &lt;abbr title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/abbr&gt;, this is basically a file system. It can store static files; no more, no less. I run my website on static files, and this would work perfectly in an &lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt; setting, and I may even do that in the near future. Facebook isn’t exactly going to be able to migrate to an entirely decentralised solution overnight though - Centralisation is needed to keep user account secure, for example. You don’t want every peer in the network to hold the keys to the castle.&lt;/p&gt;

&lt;p&gt;But it is a perfect replacement for CDNs. Imagine a CDN for static files run for the users, by the users. No need for fancy edge servers, or datacentres, just the users with their PCs turned on all over the world. You might be fetching a picture from your neighbor at 100x the speed of collecting it from a datacentre on the other side of the country.&lt;/p&gt;

&lt;h3 id=&quot;the-full-circle&quot;&gt;The Full Circle&lt;/h3&gt;
&lt;p&gt;Back to what I was talking about at the beginning. For ISPs, this means a great deal. Data is encrypted from peer to peer by default, but what if the ISP becomes a peer? It can hold a vast array of data in its own datacentres, instead of relying on third parties to provide it. This means dramatic cost-cutting on peering agreements, and hopefully savings for customers… Though you’re probably out of luck if you’re a Comcast subscriber. Good to know someone’s benefitting from it though.&lt;/p&gt;

&lt;p&gt;Anyway, this article hasn’t gone into many of the technical elements of the system, but more the potential use cases for such an idea. I’m a dreamer, and hope to see these technologies take over someday. If you want to start using it today though, just head over to the &lt;a href=&quot;https://ipfs.io/&quot;&gt;&lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt; website&lt;/a&gt;! And yes, you can also get to the website through &lt;abbr title=&quot;InterPlanetary File System&quot;&gt;IPFS&lt;/abbr&gt;, as well as &lt;abbr title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/abbr&gt;.&lt;/p&gt;

</content>
    </entry>
  
    <entry>
      <title>Ubuntu Updates: Offline</title>
      <link href="https://eelviny.me/blog/2016/ubuntu-updates-offline/" />
      <updated>2016-06-06T00:00:00+01:00</updated>
      <id>ubuntu-updates-offline</id>
      <summary>With the internet becoming so ubiquitous in this day and age, it’s hard to think of a time where you wouldn’t just be able to connect up to the internet and pull the updates directly from the provider. It’s a very real issue for me though. First, some backstory:

</summary>
      <content type="html">&lt;p&gt;With the internet becoming so ubiquitous in this day and age, it’s hard to think of a time where you wouldn’t just be able to connect up to the internet and pull the updates directly from the provider. It’s a very real issue for me though. First, some backstory:&lt;/p&gt;

&lt;p&gt;I’m currently a volunteer for a charity working in Uganda, and I’m in charge of provisioning and maintaining the laptops and computers in the school’s computer. Now, while Uganda does have internet in many locations, this school is not one of them. So, 2 years ago, I bought 20 computers, with Lubuntu preinstalled, into the school.
That was 2 years ago. I’m going to be going out to the school in less than a month and I think it’s about time I get them caught up on 2 years worth of updates, and also install some extra software requested by the teachers. You’d think it would be simple, but no desktop operating system really caters for offline updating - Ubuntu included.&lt;/p&gt;

&lt;p&gt;Backstory over. Let’s launch straight into the solution I’ve devised. It’s taken a day of searching dated forum posts, navigating bugs and pure trial and error, but 5 trashed virtual machines later and I’m there.&lt;/p&gt;

&lt;h3 id=&quot;stage-1-finding-and-downloading-updates&quot;&gt;Stage 1: Finding and downloading updates&lt;/h3&gt;

&lt;p&gt;For this method, I’ve resorted to heavy use of virtual machines to achieve this task. Being able to fire up a VirtualBox &lt;abbr title=&quot;Virtual Machine&quot;&gt;VM&lt;/abbr&gt; makes testing of this system dead simple, and I have snapshots to rollback to if things don’t go well. I’m not going to explain virtual machines; that’s another topic for another time. What’s important is to have the Ubuntu-based operating system installed, with &lt;strong&gt;no updates&lt;/strong&gt;. This is very important! By having no installed updates, we can then work out which packages need to be upgraded to reach the newest version.&lt;/p&gt;

&lt;p&gt;For this guide, I’m using Lubuntu 16.04. &lt;em&gt;Note: Ubuntu releases updated images so make sure you’re getting the oldest!&lt;/em&gt; You’ll want it to be connected to the internet - this system works by using the &lt;abbr title=&quot;Virtual Machine&quot;&gt;VM&lt;/abbr&gt; to download the updates, and then having them applied to the actual machine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/synaptic.jpg&quot; alt=&quot;Synaptic Package Manager&quot; class=&quot;float-center&quot; /&gt;
Once I got into the operating system, I started by launching Synaptic Package Manager. We’re not going to be using it the usual way, so pay close attention:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Reload the package repositories, as usual, by clicking the reload button. We now know the state of the latest updates.&lt;/li&gt;
  &lt;li&gt;Mark all upgrades. This is done by clicking the corresponding button.&lt;/li&gt;
  &lt;li&gt;This is where things take a turn - Go to File -&amp;gt; Generate package download script.&lt;/li&gt;
  &lt;li&gt;Save the script to a &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt; drive. My method is to pass a &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt; stick through my host to the &lt;abbr title=&quot;Virtual Machine&quot;&gt;VM&lt;/abbr&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we move away from Synaptic, it’s done its job.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a folder on the &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt; drive named &lt;code class=&quot;highlighter-rouge&quot;&gt;offline&lt;/code&gt;. Create another folder inside this named &lt;code class=&quot;highlighter-rouge&quot;&gt;Updates&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Move the script into the folder named &lt;code class=&quot;highlighter-rouge&quot;&gt;Updates&lt;/code&gt;, and run it. This will download every package we need.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What we’re doing here is creating an offline repository, that the recipient computer can then pull packages from - just like the update servers. The difference here is that we’re only downloading what we need, instead of the multi-terabyte archive.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Move to the &lt;code class=&quot;highlighter-rouge&quot;&gt;offline&lt;/code&gt; folder, once the packages are downloaded.&lt;/li&gt;
  &lt;li&gt;Run this command: &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-ftparchive packages . &amp;gt; Packages&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What this command does is take the files in the folder &lt;code class=&quot;highlighter-rouge&quot;&gt;Updates&lt;/code&gt; and creates a &lt;code class=&quot;highlighter-rouge&quot;&gt;Packages&lt;/code&gt; file, forming the basis of the repository.&lt;/p&gt;

&lt;h3 id=&quot;stage-2-installing-the-updates-offline&quot;&gt;Stage 2: Installing the updates offline&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/updates.jpg&quot; alt=&quot;Synaptic Package Manager&quot; class=&quot;float-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With the repository &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt; created, we now move to the offline computer. We’re going to need quite a few commands here, so I’ll detail them as I go through.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To make things simple, we’re going to replace the sources file with our custom one. Type &lt;code class=&quot;highlighter-rouge&quot;&gt;mv /etc/apt/sources.list /etc/apt/sources.list.bak&lt;/code&gt;. Now we’ve still got the original, whilst allowing our own file to go in.&lt;/li&gt;
  &lt;li&gt;Now to give the computer our &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt; repository. Type &lt;code class=&quot;highlighter-rouge&quot;&gt;echo &quot;deb file:{location} /&quot; &amp;gt; /etc/apt/sources.list&lt;/code&gt; replacing &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; with the &lt;em&gt;full&lt;/em&gt; path to your &lt;code class=&quot;highlighter-rouge&quot;&gt;offline&lt;/code&gt; folder. If you want, you can copy this folder to a location you know - whatever works for you.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Yes, I could have just added the repository to the end of the existing file, but this method makes things much easier to clean up at the end. Plus, you don’t get copious amounts of errors from the computer failing to connect to the remote repositories.&lt;/p&gt;

&lt;p&gt;Now the repository is in place, you can update the computer as normal… almost. The only problem is that the repository created is untrusted, and so we have to disable the authentication checks in &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get&lt;/code&gt;. Since we’ve downloaded the files from the trusted repositories, everything should be completely safe and untampered.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get update&lt;/code&gt; to allow the computer to recognise the new repository.&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get dist-upgrade --allow-unauthenticated&lt;/code&gt;. That switch at the end is needed to bypass the authentication checks, detailed earlier.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;stage-3-cleanup&quot;&gt;Stage 3: Cleanup&lt;/h3&gt;

&lt;p&gt;Voila! You’ve now upgraded your system to the newest version. Remember that this system can also be used to install new packages, by tweaking the instructions a bit:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In stage 1, you may select any packages you like listed in Synaptics, and they will get included into the repository.&lt;/li&gt;
  &lt;li&gt;In stage 2, simply use the command &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install {package} --allow-unauthenticated&lt;/code&gt; to install the packages you downloaded earlier. Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; with the name of that package, of course.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, it is important to note that we replaced the repository sources file earlier on. The old file can simply be replaced in one command, and it’s like the temporary repository was never there:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mv /etc/apt/sources.list.bak /etc/apt/sources.list&lt;/code&gt; This will move the backed up repository straight over the one we created, wiping out any evidence.&lt;/p&gt;

&lt;p&gt;If there’s anything you can take from this guide, it’s that Ubuntu or any other system is really not designed for offline updating. Sadly, with more and more computers becoming more connected, I see this problem only getting worse… I hope that this guide worked for you; there’s so many outdated guides out there. Here’s to hoping this one’s not outdated too!&lt;/p&gt;

&lt;h3 id=&quot;for-the-lazy&quot;&gt;For the lazy&lt;/h3&gt;

&lt;p&gt;For those who like automation (Like myself!), here’s a script that I use to automatically update laptops. You’ll need to do things manually to create the repository, but this allows me to plug in a &lt;abbr title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/abbr&gt; stick, hit go, let it update and move on to the next laptop. Quick and easy updating! &lt;em&gt;Must be run as root.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt; dirname &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BASH_SOURCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[0]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Create new sources list&quot;&lt;/span&gt;
mv /etc/apt/sources.list /etc/apt/sources.list.bak
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;deb file:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; /&quot;&lt;/span&gt; &amp;gt; /etc/apt/sources.list

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Start the update process&quot;&lt;/span&gt;
apt update
apt dist-upgrade --allow-unauthenticated -y
apt autoremove -y

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Remove temporary sources&quot;&lt;/span&gt;
mv /etc/apt/sources.list.bak /etc/apt/sources.list

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Done&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#reboot&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</content>
    </entry>
  
    <entry>
      <title>Phone Woes</title>
      <link href="https://eelviny.me/blog/2016/phone-woes/" />
      <updated>2016-04-21T00:00:00+01:00</updated>
      <id>phone-woes</id>
      <summary>I’m probably not the first to comment on the sealed nature of technology these days, and I definitely won’t be the last, but it’s a trend that seems to have nothing good coming out of it.

</summary>
      <content type="html">&lt;p&gt;I’m probably not the first to comment on the sealed nature of technology these days, and I definitely won’t be the last, but it’s a trend that seems to have nothing good coming out of it.&lt;/p&gt;

&lt;p&gt;But first, some backstory: I have a nice big &lt;abbr title=&quot;Personal Computer&quot;&gt;PC&lt;/abbr&gt; sitting on my desk. It’s one of those things that is a slowly dying breed; a rare commodity. What’s the point of having a big clunky &lt;abbr title=&quot;Personal Computer&quot;&gt;PC&lt;/abbr&gt; when I can just pick up my laptop and go sit on the sofa? If anything, my &lt;abbr title=&quot;Personal Computer&quot;&gt;PC&lt;/abbr&gt; is to me like what a classic car is to a car enthusiast. I don’t replace my &lt;abbr title=&quot;Personal Computer&quot;&gt;PC&lt;/abbr&gt;, I upgrade it. The parts are easy to slot in, as long as you’re handy with a screwdriver, and if the processor starts to get a bit outdated, I’ll replace only that - I keep the rest of my investment.&lt;/p&gt;

&lt;p&gt;It’s just not like that with phones. It never has been, but then again the ideas that drive phone sales have never been the same.&lt;/p&gt;

&lt;p&gt;The other day my trusty Nexus 5 smartphone stopped making calls properly. The microphone had sustained some damage, and not being able to talk to people was a deal breaker for me. To me it feels a shame that the first reaction of anyone I know would be “Oh, that’s a shame… I’ll get a new one”. I wanted to fix it. It just doesn’t make sense to me that someone would replace a whole device when only a tiny thing on it is broken. It’s like having a cat that’s lost an ear, and saying that you’ll euthanise it and get a new one.&lt;/p&gt;

&lt;p&gt;Alright, maybe that last simile was a bit over the top, but you get what I’m saying.&lt;/p&gt;

&lt;p&gt;When I got home that day, I got on to Google to figure out how to fix the thing. I figured that since I could buy parts for a computer, I could buy a small part for a phone. Boy was I wrong. The microphone is connected to the whole bottom assembly, and to my surprise, the Nexus 5 was rated as being one of the more easily repairable phones around. My hands are not very steady, which is fine for pushing things into a &lt;abbr title=&quot;Peripheral Component Interconnect&quot;&gt;PCI&lt;/abbr&gt; slot, but past experience meant I had a bit of a sinking feeling - I finally began to understand why people just “get a new one”. This phone was my daily driver, and I had personalised it; custom software, custom skin, you name it. Long story short, I got into a conversation with a guy who asked some questions on my new “Faulty Nexus 5” eBay listing.&lt;/p&gt;

&lt;p&gt;This is the Internet, so I don’t know their name, but I’ll call them Kopz. Kopz has a hobby that I really wish I had the motor skills for, and that is repairing Nexus 5 phones. It’s a good hobby to take up, as Kopz told me that they aren’t as frustrating to repair as some other phones on the market (&lt;em&gt;cough&lt;/em&gt; I’m looking at you Apple) and it’s a relatively popular phone. People like this I admire, as every phone flogged on eBay is one phone less that ends up in the landfill simply because of small defects like mine. One replacement part is all that’s needed to take my phone from a faulty, knock-off price to a “Seller Refurbished” phone selling for like-new prices. It really works for everyone, and my charity work in developing countries tells me that it’s nothing new.&lt;/p&gt;

&lt;p&gt;The main point of this is that we live in developed countries, but we are more wasteful than we have ever been. There is so much to learn from people like Kopz, but also the small stall owners in the depths of Africa, taking a battered Nokia and making it last for years more than it was ever designed for. I salute you, I really do, because no matter how small it is, whether it’s a stall that supports a family or a person with a hobby, they’re doing something to help.&lt;/p&gt;

</content>
    </entry>
  
    <entry>
      <title>Look! A new website</title>
      <link href="https://eelviny.me/blog/2016/look-a-new-website/" />
      <updated>2016-03-23T00:00:00+00:00</updated>
      <id>look-a-new-website</id>
      <summary>Time to get out of the free, but restricting grasp of Tumblr. It’s a great service - don’t get me wrong, but the style of blogging makes it feel more like your average social network with a few more advanced features bolted on.
The solution? Make your own!

</summary>
      <content type="html">&lt;p&gt;Time to get out of the free, but restricting grasp of Tumblr. It’s a great service - don’t get me wrong, but the style of blogging makes it feel more like your average social network with a few more advanced features bolted on.
The solution? &lt;strong&gt;Make your own!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, in the true Blue Peter style, here’s a website I made earlier. Well, when I say earlier, I mean sort of &lt;em&gt;now&lt;/em&gt; earlier. Sure, it’s a little rough around the edges still, and there’s still bits missing, but it’s a website nonetheless!&lt;/p&gt;

&lt;h3 id=&quot;whats-it-running&quot;&gt;What’s it running?&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/jekyll.png&quot; alt=&quot;Jekyll&quot; class=&quot;float-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My two criteria for this website were that I wanted it to be fast, and I wanted it to be cheap. To meet my simple, yet difficult in practise critera, I settled on &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. Jekyll is an open-source static site generator that allows you to create a very complex setup, that automagically transforms it into simple files that can be hosted on anything - no server processing needed. Just build the site on your home PC and upload the files it spits out the other end! In case you’ve been living under a technological rock, a static site generator creates the site once, and the files are simply served as is (hence the term ‘static’). There’s no fancy PHP or webserver needed, simply something that can host files.&lt;/p&gt;

&lt;p&gt;It took a bit of a getting used to - coming from a background of full-blown &lt;abbr title=&quot;Content Management Service&quot;&gt;CMS&lt;/abbr&gt; implementations, not being given a control panel was a bit of a change! Time to crack the knuckles, roll up the sleeves, cue the music and get programming instead. I quickly found that the underlying programming language, Ruby, is a joy to use and I’ve not gone back from it since.&lt;/p&gt;

&lt;h3 id=&quot;hows-it-running&quot;&gt;How’s it running?&lt;/h3&gt;
&lt;p&gt;Actually, this is something I would love to cover in detail in a future post. But for now, I’ll tell you this: &lt;a href=&quot;https://aws.amazon.com&quot;&gt;Amazon &lt;abbr title=&quot;Amazon Web Services&quot;&gt;AWS&lt;/abbr&gt;&lt;/a&gt; is simply perfect for low-traffic websites such as this one, and a combination of the right tools from &lt;abbr title=&quot;Amazon Web Services&quot;&gt;AWS&lt;/abbr&gt; will get anything done. I use Amazon &lt;abbr title=&quot;Simple Storage Service&quot;&gt;S3&lt;/abbr&gt; to hold all the static files, which is then passed to Cloudfront which distributes the files and deals with the &lt;abbr title=&quot;Secure Sockets Layer&quot;&gt;SSL&lt;/abbr&gt; certificate. Finally, I topped it off with Route 53, simply because I’m dissatisfied with NameCheap’s &lt;abbr title=&quot;Domain Name System&quot;&gt;DNS&lt;/abbr&gt; configuration service. All this and I’m spending about 50p per month right now - The “pay for what you use” model means it could increase in the future.&lt;/p&gt;

&lt;p&gt;Anyway, I hope you like it! It’s taken way too much time that I could have used doing more useful things, such as coursework. But it’s been fun to do.&lt;/p&gt;

</content>
    </entry>
  
    <entry>
      <title>Cyber Centurion 2015</title>
      <link href="https://eelviny.me/blog/2015/cyber-centurion/" />
      <updated>2015-11-04T00:00:00+00:00</updated>
      <id>cyber-centurion-2015</id>
      <summary>Doing something on the side is something every student should get into – Cyber Centurion is just one of these activities. It has nothing to do with the curriculum, and won’t help much towards your next exam, but it’s great fun that will look brilliant on the C.V. one day. Grades are only half the story, after all.

</summary>
      <content type="html">&lt;p&gt;Doing something on the side is something every student should get into – Cyber Centurion is just one of these activities. It has nothing to do with the curriculum, and won’t help much towards your next exam, but it’s great fun that will look brilliant on the C.V. one day. Grades are only half the story, after all.&lt;/p&gt;

&lt;p&gt;The UK Cyber Centurion is an opportunity for logical thinking to demontrate our knowledge of digital security, and to do so we formed our own teams of 4-6 people. I’m in year 13 and teamed up with 3 other students from my class. We even get to choose a team name, and after about 2 minutes “Octan” was chosen. Our task was to take a computer operating system sent to us by Cyber Centurion, and find all the viruses, vulnerabilities and security holes we could; from something as simple as setting a password, to finding and eradicating viruses and spyware.&lt;/p&gt;

&lt;p&gt;While many students may balk at the idea of going in on a TD day, it was very much worth it. This was a practise round, so there wasn’t any pressure on us at all, and since it was our first nobody knew what to expect! Since my team is all year 13, we had a bit more experience up our sleeve than other groups, and we gained a nice lead over the next few hours, getting to around 64/100 points. It was a competition, and we weren’t going to give up our secrets!&lt;/p&gt;

&lt;p&gt;…And then we changed our mind. This is a practise round, so after a nice lunch break where we all went into town and bought things that aren’t quite considered healthy, we started chatting with the other teams. By this point we had all pretty much reached a standstill, as nobody knew how to gain the last few marks, so what was a heated competition turned into a class-wide chat where we sorted through ideas on the whiteboard and gave pointers on how to fix certain issues.&lt;/p&gt;

&lt;p&gt;After all this, every team in the room ended up with 75 points. There were still a few more security holes that nobody was able to find, but this was just the first try – It’ll be interesting to see what the competition throws our way.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is something I was asked to write, and I thought hey, it would make a good enough blog post!&lt;/em&gt;&lt;/p&gt;
</content>
    </entry>
  
</feed>
